//go:build !noasm && amd64
// AUTO-GENERATED BY GOCC -- DO NOT EDIT

#include "textflag.h"

TEXT ·Test_fn_void_ret(SB), NOSPLIT, $0-32
	MOVL a+0(FP), DI
	MOVQ b+8(FP), SI
	MOVB c+16(FP), DX
	MOVQ res+24(FP), CX
	BYTE $0x55               // push	rbp
	WORD $0x8948; BYTE $0xe5 // mov	rbp, rsp
	LONG $0xf8e48348         // and	rsp, -8
	WORD $0xaf0f; BYTE $0xfa // imul	edi, edx
	WORD $0x6348; BYTE $0xc7 // movsxd	rax, edi
	WORD $0x0148; BYTE $0xf0 // add	rax, rsi
	WORD $0x8948; BYTE $0x01 // mov	qword ptr [rcx], rax
	WORD $0x8948; BYTE $0xec // mov	rsp, rbp
	BYTE $0x5d               // pop	rbp
	RET

TEXT ·Test_fn_byte_ret(SB), NOSPLIT, $0-32
	MOVL a+0(FP), DI
	MOVQ b+8(FP), SI
	MOVB c+16(FP), DX
	BYTE $0x55               // push	rbp
	WORD $0x8948; BYTE $0xe5 // mov	rbp, rsp
	LONG $0xf8e48348         // and	rsp, -8
	WORD $0xaf0f; BYTE $0xfa // imul	edi, edx
	WORD $0x048d; BYTE $0x3e // lea	eax, [rsi + rdi]
	WORD $0x8948; BYTE $0xec // mov	rsp, rbp
	BYTE $0x5d               // pop	rbp
	MOVB AX, ret+24(FP)
	RET

TEXT ·Test_fn_6params(SB), NOSPLIT, $0-56
	MOVQ a+0(FP), DI
	MOVQ b+8(FP), SI
	MOVQ c+16(FP), DX
	MOVQ d+24(FP), CX
	MOVQ e+32(FP), R8
	MOVQ f+40(FP), R9
	BYTE $0x55               // push	rbp
	WORD $0x8948; BYTE $0xe5 // mov	rbp, rsp
	LONG $0xf8e48348         // and	rsp, -8
	LONG $0xfaaf0f48         // imul	rdi, rdx
	LONG $0x37048d48         // lea	rax, [rdi + rsi]
	LONG $0xc9af0f49         // imul	rcx, r9
	WORD $0x014c; BYTE $0xc0 // add	rax, r8
	WORD $0x0148; BYTE $0xc8 // add	rax, rcx
	WORD $0x8948; BYTE $0xec // mov	rsp, rbp
	BYTE $0x5d               // pop	rbp
	MOVQ AX, ret+48(FP)
	RET
